buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5.2'
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'cargo'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    
    tasks.withType(JavaCompile) { 
        sourceCompatibility = "1.6"
        targetCompatibility = "1.6" 
   }
}

war {
    baseName = 'ptsd'
    version = '0.0.1'
}

jar {
	baseName = 'ptsd'
	version = '0.0.1'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://m2.neo4j.org" }
    maven { url 'http://repo.spring.io/snapshot' }
}

configurations {
    providedRuntime
}

cargo {
    containerId = 'tomcat8x'
    port = 8080

    deployable {
        context = 'ptsd-0.0.1'
    }

    remote {
        hostname = 'localhost'
        username = 'admin'
        password = 'Agilexadmin99$'
    }

    local {
        homeDir = file(System.getenv("CATALINA_HOME"))
        outputFile = file('build/libs/output.log')
        timeout = 60000

        containerProperties {
            property 'cargo.tomcat.ajp.port', 9099
        }
    }
}

dependencies {
 	compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.data:spring-data-mongodb:1.7.0.BUILD-SNAPSHOT")
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile('com.fasterxml.jackson.core:jackson-databind:2.5.0')
    compile('commons-fileupload:commons-fileupload:1.2')
    compile('commons-io:commons-io:2.4')
    testCompile("junit:junit")
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

task deployWar (dependsOn: [cargoUndeployRemote, cargoDeployRemote]) << {
    println "Deploying war"
}

cargoDeployRemote.mustRunAfter cargoUndeployRemote

task deploy (dependsOn: war){
    copy {
        from "build/libs"
        into System.getenv("CATALINA_HOME")+"/webapps"
        include "*.war"
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.11'
}

task showMeCache << {
  configurations.compile.each { println it }
}
